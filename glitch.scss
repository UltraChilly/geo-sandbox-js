$bgImg: url(style/bg-light.png);
$color0: cornflowerblue;
$color1:green;
$color2:yellow;
$color3:orange;
$color4:red;
$color5:black;

/*---This part below was in style.css before but it was easier to bring it here for now---*/

body {
	padding: 0.5em;
	margin: 0em;
	background: $bgImg;
}

h1 {
	font-size: 1em;
	background: black;
	color: white;
	padding: 15px;
	margin: 15px;

}

h1 .version {
	font-style: italic;
}

#status, #infos, #directionToTarget {
	padding: 15px;
/*	margin: 15px;*/
	background: white; 
    width: 80vw;
    display: block;
    margin: 15px auto;
    box-sizing: border-box;

}

#myMap { 

	border: 10px solid white;
	margin: 15px auto;
/*	height: 300px; */
    height: 20vh;
    width: 80vw;
    box-sizing: border-box;
    
}

/*(temporary)Glitch Style*/

#testZone {
    width: 80vw;
    padding: 15px;
    height: 20vh;
    text-align: center;
    margin: 35px auto 0px auto;
    box-sizing: border-box;
}

.clearZone { 
    background: white;
}

.glitched0 {
    background: $color0;
}

.glitched1 {
    background: $color1;
}

.glitched2 {
    background: $color2;
}

.glitched3 {
    background: $color3;
}

.glitched4 {
    background: $color4;
}

.glitched5 {
    background: $color5;
}

/*Debug zone style*/

.debug {
    display: box;
    
}

.debugHidden {
    visibility: hidden;/*map doesn't load properly if its container is set to display none*/
}

#debug {
    text-align: center;
}

/*Compass*/

#arrowNorth {
	width: 0; 
	height: 0; 
	border-left: 20px solid transparent;
	border-right: 20px solid transparent;
	
	border-bottom: 50px solid red;
    display: inline-block;
}

#arrowTarget {
	width: 0; 
	height: 0; 
	border-left: 20px solid transparent;
	border-right: 20px solid transparent;
	
	border-bottom: 50px solid green;
    display: inline-block;
}


.fauxBorder {
    /*pas utilisées pour le moment et peut-être jamais en fait... on verra plus tard...*/
    background: white;
}

#fauxBorderLeft {
    width: 20px;
    height: 100%;
    position: absolute;
    left: 0;
    top: 0;
}

#fauxBorderRight {
    width: 20px;
    height: 100%;
    position: absolute;
    right: 0;
    top: 0;
}

#fauxBorderUp {
    height: 20px;
    width: 100vw;
    position: absolute;
    top: 0;
}



#fauxBorderDown {
    height: 20px;
    width: 100vw;
    position: absolute;
    bottom: 0;
}


.arrow {
    width: 40%;
    display: inline-block;
}

#debugButton {
    margin: 20px auto;
    display: block;
}

/*---end of style.css---*/

/*Style for glitch effects stolen from Chris Coyier https://css-tricks.com/glitch-effect-text-images-svg/
*/




#testZone p{
    font-family: sans-serif;
    color: white;
    font-size: 2em;
    position: relative;
}

@mixin glitchBefAft($content) {
    content: $content;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

.glitched0 p::before,
.glitched0 p::after {
//    content: 'Find the source of the interference';
//    position: absolute;
//    top: 0;
//    left: 0;
//    width: 100%;
//    height: 100%;
    @include glitchBefAft('Find the source of the interference');
}

.glitched1 p::before,
.glitched1 p::after {
    @include glitchBefAft("Looks like you're on the right track.");
}

.glitched2 p::before,
.glitched2 p::after {
    @include glitchBefAft("You're getting closer (except if you went back...)");
}

.glitched3 p::before,
.glitched3 p::after {
    @include glitchBefAft("I think you figured it out.");
}

.glitched4 p::before,
.glitched4 p::after {
    @include glitchBefAft("It's big, I can feel it in my circuits.");
}

.glitched5 p::before,
.glitched5 p::after {
    @include glitchBefAft("You found it! aaaand now you're dead... game over.");
}

@keyframes glitch-anim-1{
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}

@keyframes glitch-anim-2{
  $steps: 10;
  @for $i from 0 through $steps {
    #{percentage($i*(1/$steps))} {
      clip: rect(random(100)+px, 9999px, random(100)+px, 0);
    }
  }
}


@mixin glitchBefore($timing, $color) {
    left: 2px;
    text-shadow: -1px 0 red;
    background: $color;
    animation: glitch-anim-1 $timing infinite linear alternate-reverse;
}

.glitched0 p::before {
//    left: 2px;
//    text-shadow: -1px 0 red;
//    background: cornflowerblue;
//
//    animation: glitch-anim-1 10s infinite linear alternate-reverse;
    @include glitchBefore(10s, $color0);

}

.glitched1 p::before{
    @include glitchBefore(5s, $color1);
}
.glitched2 p::before{
    @include glitchBefore(3s, $color2);
}
.glitched3 p::before{
    @include glitchBefore(1s, $color3);
}
.glitched4 p::before{
    @include glitchBefore(0.5s, $color4);
}
.glitched5 p::before{
    @include glitchBefore(0.1s, $color5);
}

@mixin glitchAfter($timing, $color) {
    left: -2px;
    text-shadow: -1px 0 blue;
    background: $color;
    animation: glitch-anim-2 $timing infinite linear alternate-reverse;
}

.glitched0 p::after {
//    left: -2px;
//    text-shadow: -1px 0 blue;
//    background: cornflowerblue;
//    animation: glitch-anim-2 10s infinite linear alternate-reverse;
    @include glitchAfter(10s,$color0);

}

.glitched1 p::after{
    @include glitchAfter(5s, $color1);
}
.glitched2 p::after{
    @include glitchAfter(3s, $color2);
}
.glitched3 p::after{
    @include glitchAfter(1s, $color3);
}
.glitched4 p::after{
    @include glitchAfter(0.5s, $color4);
}
.glitched5 p::after{
    @include glitchAfter(0.1s, $color5);
}

